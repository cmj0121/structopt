// Code generated by "stringer -type=TypeHint"; DO NOT EDIT.

package structopt

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NONE-0]
	_ = x[INT-1]
	_ = x[UINT-2]
	_ = x[RAT-3]
	_ = x[STR-4]
	_ = x[FILE-5]
	_ = x[FMODE-6]
	_ = x[TIME-7]
	_ = x[SPAN-8]
	_ = x[IFACE-9]
	_ = x[IP-10]
	_ = x[CIDR-11]
}

const _TypeHint_name = "NONEINTUINTRATSTRFILEFMODETIMESPANIFACEIPCIDR"

var _TypeHint_index = [...]uint8{0, 4, 7, 11, 14, 17, 21, 26, 30, 34, 39, 41, 45}

func (i TypeHint) String() string {
	if i < 0 || i >= TypeHint(len(_TypeHint_index)-1) {
		return "TypeHint(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TypeHint_name[_TypeHint_index[i]:_TypeHint_index[i+1]]
}
